version: '3.8'

services:
  coworkmy-frontend:
    image: node:20-alpine
    container_name: coworkmy-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    environment:
      NODE_ENV: production
    volumes:
      - uploads_data:/usr/share/nginx/html/uploads
    working_dir: /usr/share/nginx/html
    command: >
      sh -c "
        set -e &&
        apk add --no-cache git nginx &&
        echo 'Cloning repository...' &&
        git clone https://github.com/hlafethi/coworkmy-clean.git /tmp/app &&
        echo 'Installing dependencies...' &&
        cd /tmp/app &&
        npm install &&
        echo 'Building frontend...' &&
        npm run build &&
        echo 'Copying built files...' &&
        cp -r dist/* /usr/share/nginx/html/ &&
        cd / &&
        rm -rf /tmp/app &&
        echo 'Creating nginx config...' &&
        echo 'server {' > /etc/nginx/conf.d/default.conf &&
        echo '    listen 80;' >> /etc/nginx/conf.d/default.conf &&
        echo '    server_name _;' >> /etc/nginx/conf.d/default.conf &&
        echo '    root /usr/share/nginx/html;' >> /etc/nginx/conf.d/default.conf &&
        echo '    index index.html;' >> /etc/nginx/conf.d/default.conf &&
        echo '    location ~* \.js$ {' >> /etc/nginx/conf.d/default.conf &&
        echo '        add_header Content-Type application/javascript;' >> /etc/nginx/conf.d/default.conf &&
        echo '    }' >> /etc/nginx/conf.d/default.conf &&
        echo '    location ~* \.css$ {' >> /etc/nginx/conf.d/default.conf &&
        echo '        add_header Content-Type text/css;' >> /etc/nginx/conf.d/default.conf &&
        echo '    }' >> /etc/nginx/conf.d/default.conf &&
        echo '    location / {' >> /etc/nginx/conf.d/default.conf &&
        echo '        try_files $uri $uri/ /index.html;' >> /etc/nginx/conf.d/default.conf &&
        echo '    }' >> /etc/nginx/conf.d/default.conf &&
        echo '}' >> /etc/nginx/conf.d/default.conf &&
        echo 'Starting nginx...' &&
        nginx -g 'daemon off;'
      "
    networks:
      - proxy
      - coworkmy-network
    depends_on:
      - coworkmy-backend

  coworkmy-backend:
    image: node:20-alpine
    container_name: coworkmy-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      API_PORT: 5000
      DB_HOST: 147.93.58.155
      DB_PORT: 5432
      DB_NAME: coworkmy
      DB_USER: vpshostinger
      DB_PASSWORD: ${DB_PASSWORD}
      DB_SSL: true
      JWT_SECRET: ${JWT_SECRET}
      ALLOWED_ORIGINS: https://coworkmy.fr,https://www.coworkmy.fr
      FRONTEND_URL: https://coworkmy.fr
    volumes:
      - uploads_data:/app/uploads
    working_dir: /app
    command: >
      sh -c "
        apk add --no-cache git &&
        rm -rf /tmp/repo &&
        git clone https://github.com/hlafethi/coworkmy-clean.git /tmp/repo &&
        cp -r /tmp/repo/* /app/ &&
        npm install --omit=dev &&
        node server.js
      "
    networks:
      - proxy
      - coworkmy-network

volumes:
  uploads_data:

networks:
  proxy:
    external: true
  coworkmy-network:
    driver: bridge
