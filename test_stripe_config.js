// Script pour tester la configuration Stripe
import { createClient } from '@supabase/supabase-js';

// Configuration Supabase
const supabaseUrl = 'https://exffryodynkyizbeesbt.supabase.co';
const supabaseServiceKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImV4ZmZyeW9keW5reWl6YmVlc2J0Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0MTYyMjM5OSwiZXhwIjoyMDU3MTk4Mzk5fQ.OHE-ZfGvFvLOI_sbb05Is71WCSrF4p4GzvD_OoFLOxw';

const supabase = createClient(supabaseUrl, supabaseServiceKey);

async function testStripeConfig() {
  console.log('üîç Test de la configuration Stripe...\n');

  try {
    // 1. V√©rifier les param√®tres dans admin_settings
    console.log('1. V√©rification des param√®tres admin_settings...');
    const { data: adminSettings, error: adminError } = await supabase
      .from('admin_settings')
      .select('key, value')
      .eq('key', 'stripe');

    if (adminError) {
      console.error('‚ùå Erreur admin_settings:', adminError);
    } else if (adminSettings && adminSettings.length > 0) {
      const stripeConfig = adminSettings[0].value;
      console.log('‚úÖ admin_settings trouv√©:');
      console.log(`   Mode: ${stripeConfig.mode || 'non d√©fini'}`);
      console.log(`   Cl√© publique test: ${stripeConfig.test_publishable_key ? '‚úÖ' : '‚ùå'}`);
      console.log(`   Cl√© secr√®te test: ${stripeConfig.test_secret_key ? '‚úÖ' : '‚ùå'}`);
      console.log(`   Cl√© publique live: ${stripeConfig.live_publishable_key ? '‚úÖ' : '‚ùå'}`);
      console.log(`   Cl√© secr√®te live: ${stripeConfig.live_secret_key ? '‚úÖ' : '‚ùå'}`);
    } else {
      console.log('‚ö†Ô∏è  Aucun param√®tre Stripe trouv√© dans admin_settings');
    }

    // 2. V√©rifier la table stripe_settings si elle existe
    console.log('\n2. V√©rification de la table stripe_settings...');
    const { data: stripeSettings, error: stripeError } = await supabase
      .from('stripe_settings')
      .select('*')
      .limit(1);

    if (stripeError) {
      console.log('‚ÑπÔ∏è  Table stripe_settings n\'existe pas ou erreur:', stripeError.message);
    } else if (stripeSettings && stripeSettings.length > 0) {
      const settings = stripeSettings[0];
      console.log('‚úÖ stripe_settings trouv√©:');
      console.log(`   Mode: ${settings.mode || 'non d√©fini'}`);
      console.log(`   Cl√© publique live: ${settings.live_publishable_key ? '‚úÖ' : '‚ùå'}`);
      console.log(`   Cl√© secr√®te live: ${settings.live_secret_key ? '‚úÖ' : '‚ùå'}`);
    } else {
      console.log('‚ö†Ô∏è  Aucun param√®tre trouv√© dans stripe_settings');
    }

    // 3. Tester la fonction create-payment-session
    console.log('\n3. Test de la fonction create-payment-session...');
    const testResponse = await fetch('https://exffryodynkyizbeesbt.functions.supabase.co/create-payment-session', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${supabaseServiceKey}`
      },
      body: JSON.stringify({
        bookingId: 'test-booking-123',
        amount: 2500, // 25‚Ç¨ en centimes
        customerEmail: 'test@example.com',
        metadata: {
          space_name: 'Espace Test'
        },
        currency: 'eur'
      })
    });

    if (testResponse.ok) {
      const testData = await testResponse.json();
      console.log('‚úÖ Fonction create-payment-session fonctionne:');
      console.log(`   Mode d√©tect√©: ${testData.mode || 'non sp√©cifi√©'}`);
      console.log(`   URL g√©n√©r√©e: ${testData.url ? '‚úÖ' : '‚ùå'}`);
    } else {
      const errorData = await testResponse.json();
      console.log('‚ùå Erreur fonction create-payment-session:', errorData);
    }

    // 4. R√©sum√©
    console.log('\nüìã R√©sum√© de la configuration:');
    console.log('Les variables d\'environnement Supabase ont √©t√© mises √† jour avec les cl√©s LIVE.');
    console.log('La fonction create-payment-session utilise maintenant directement les variables d\'environnement.');
    console.log('Pour basculer compl√®tement en mode production, assurez-vous que:');
    console.log('1. Les variables d\'environnement Supabase sont en mode LIVE ‚úÖ');
    console.log('2. Les webhooks Stripe pointent vers l\'URL de production');
    console.log('3. Les cl√©s publiques c√¥t√© client sont en mode LIVE');

  } catch (error) {
    console.error('‚ùå Erreur lors du test:', error);
  }
}

testStripeConfig(); 