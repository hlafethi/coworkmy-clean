version: '3.8'

services:
  coworkmy-frontend:
    image: nginx:alpine
    container_name: coworkmy-frontend
    restart: unless-stopped
    command: >
      sh -c "
        set -e &&
        apk add --no-cache git nodejs npm &&
        echo 'Cloning repository...' &&
        git clone https://github.com/hlafethi/coworkmy-clean.git /tmp/app &&
        cd /tmp/app &&
        git checkout master &&
        echo 'Installing dependencies...' &&
        npm install &&
        echo 'Building application...' &&
        npm run build &&
        echo 'Copying built files...' &&
        mkdir -p /usr/share/nginx/html &&
        cp -r dist/* /usr/share/nginx/html/ &&
        cd / &&
        rm -rf /tmp/app &&
        echo 'Creating nginx config with API proxy...' &&
        cat > /etc/nginx/conf.d/default.conf << 'EOF'
        server {
            listen 80;
            server_name _;
            root /usr/share/nginx/html;
            index index.html;
            
            location /api/ {
                proxy_pass http://coworkmy-api:5000;
                proxy_set_header Host \$host;
                proxy_set_header X-Real-IP \$remote_addr;
                proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto \$scheme;
            }
            
            location / {
                try_files \$uri \$uri/ /index.html;
            }
        }
        EOF
        echo 'Starting nginx...' &&
        nginx -g 'daemon off;'
      "
    networks:
      - coworkmy-network
    ports:
      - "3002:80"

  coworkmy-api:
    image: node:20-alpine
    container_name: coworkmy-api
    restart: unless-stopped
    working_dir: /app
    environment:
      - NODE_ENV=production
      - API_PORT=5000
      - DB_HOST=147.93.58.155
      - DB_PORT=5432
      - DB_NAME=coworkmy
      - DB_USER=vpshostinger
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_SSL=true
      - JWT_SECRET=${JWT_SECRET}
      - ALLOWED_ORIGINS=https://coworkmy.fr,https://www.coworkmy.fr
      - FRONTEND_URL=https://coworkmy.fr
    command: >
      sh -c "
        set -e &&
        echo 'Creating simple API server...' &&
        cat > server.js << 'EOF'
        import express from 'express';
        import cors from 'cors';
        
        const app = express();
        
        app.use(cors());
        app.use(express.json());
        
        app.get('/api/health', (req, res) => {
          res.json({ 
            success: true, 
            data: { 
              status: 'OK', 
              timestamp: new Date().toISOString(),
              version: '1.0.0'
            } 
          });
        });
        
        app.get('/api/spaces', (req, res) => {
          res.json({ 
            success: true, 
            data: [
              { id: 1, name: 'Espace 1', description: 'Description espace 1' },
              { id: 2, name: 'Espace 2', description: 'Description espace 2' }
            ]
          });
        });
        
        app.get('/api/users', (req, res) => {
          res.json({ 
            success: true, 
            data: [
              { id: 1, name: 'Utilisateur 1', email: 'user1@example.com' },
              { id: 2, name: 'Utilisateur 2', email: 'user2@example.com' }
            ]
          });
        });
        
        app.get('/api/bookings', (req, res) => {
          res.json({ 
            success: true, 
            data: [
              { id: 1, space_id: 1, user_id: 1, start_date: '2024-01-01', end_date: '2024-01-02' },
              { id: 2, space_id: 2, user_id: 2, start_date: '2024-01-03', end_date: '2024-01-04' }
            ]
          });
        });
        
        const PORT = process.env.API_PORT || 5000;
        app.listen(PORT, () => {
          console.log('ðŸš€ API Server started on port', PORT);
        });
        EOF
        echo 'Installing dependencies...' &&
        npm init -y &&
        npm install express cors &&
        echo 'Starting API server...' &&
        node server.js
      "
    networks:
      - coworkmy-network

  redis:
    image: redis:7-alpine
    container_name: coworkmy-redis
    restart: unless-stopped
    networks:
      - coworkmy-network
    ports:
      - "6380:6379"

networks:
  coworkmy-network:
    driver: bridge
