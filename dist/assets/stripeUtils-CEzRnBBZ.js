import{h as i}from"./index-DCtXYFOS.js";const h=async(s,a,r,e={},u="eur",n=!1)=>{try{const o=await i.post("/stripe/create-checkout-session",{booking_id:s,amount:a,customer_email:r,metadata:e});if(!o.success)throw new Error(o.error||"Erreur lors de la création de la session");return{url:o.data.url,mode:o.data.mode||"test"}}catch(o){throw console.error("[Stripe] Erreur dans createStripeCheckoutSession:",o),o}},k=async(s,a,r=!1)=>{try{let e=null;const u=["coworkmy-auth-token","coworkmy-auth-session","sb-exffryodynkyizbeesbt-auth-token","supabase.auth.token","supabase.auth.session"];for(const c of u){const l=localStorage.getItem(c);if(l)try{let t=JSON.parse(l);if(Array.isArray(t)){const p=t.join("");t=JSON.parse(p)}else typeof t=="string"&&(t=JSON.parse(t));if(t.access_token){e=t.access_token;break}}catch{}}if(!e)try{e="authenticated"}catch(c){console.warn("[Stripe] Erreur lors de la récupération du token via API client:",c)}if(!e)throw new Error("Utilisateur non authentifié - aucun token trouvé");const n=await i.post("/stripe/create-customer-portal",{customerEmail:s,returnUrl:a,isAdmin:r});if(!n.success)throw new Error(n.error||"Erreur lors de la création du portail client");return n.data}catch(e){throw console.error("[Stripe] Erreur dans createStripeCustomerPortal:",e),e}},y=async(s,a)=>{try{const r=await i.put(`/bookings/${s}/status`,{status:a});if(!r.success)throw new Error(r.error||"Failed to update booking status")}catch(r){throw console.error(`❌ Erreur lors de la mise à jour du statut de la réservation ${s}:`,r),r}};export{h as a,k as c,y as u};
