version: '3.8'

services:
  coworkmy-frontend:
    image: nginx:alpine
    container_name: coworkmy-frontend
    restart: unless-stopped
    ports:
      - "3003:80"
    command: >
      sh -c "
        set -e &&
        apk add --no-cache git &&
        echo 'Cloning repository...' &&
        git clone https://github.com/hlafethi/coworkmy-clean.git /tmp/app &&
        echo 'Copying built files...' &&
        mkdir -p /usr/share/nginx/html &&
        cp -r /tmp/app/dist/* /usr/share/nginx/html/ 2>/dev/null || echo 'No dist folder found' &&
        if [ ! -f /usr/share/nginx/html/index.html ]; then
          echo 'Creating placeholder index.html...' &&
          echo '<!DOCTYPE html><html><head><title>CoworkMy</title></head><body><h1>CoworkMy Application</h1><p>Frontend is being built...</p></body></html>' > /usr/share/nginx/html/index.html
        fi &&
        cd / &&
        rm -rf /tmp/app &&
        echo 'Creating nginx config with proper MIME types...' &&
        cat > /etc/nginx/conf.d/default.conf << 'EOF'
server {
    listen 80;
    server_name _;
    root /usr/share/nginx/html;
    index index.html;

    # Configuration des types MIME pour les modules JavaScript
    location ~* \.js$ {
        add_header Content-Type application/javascript;
        add_header Cache-Control "public, max-age=31536000";
    }

    location ~* \.css$ {
        add_header Content-Type text/css;
        add_header Cache-Control "public, max-age=31536000";
    }

    location ~* \.(png|jpg|jpeg|gif|ico|svg)$ {
        add_header Cache-Control "public, max-age=31536000";
    }

    # Gestion des routes SPA
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Gestion des assets avec cache
    location /assets/ {
        add_header Cache-Control "public, max-age=31536000";
        try_files $uri =404;
    }
}
EOF
        echo 'Starting nginx...' &&
        nginx -g 'daemon off;'
      "
    networks:
      - proxy
      - coworkmy-network

  coworkmy-backend:
    image: node:20-alpine
    container_name: coworkmy-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      API_PORT: 5000
      DB_HOST: 147.93.58.155
      DB_PORT: 5432
      DB_NAME: coworkmy
      DB_USER: vpshostinger
      DB_PASSWORD: ${DB_PASSWORD}
      DB_SSL: true
      JWT_SECRET: ${JWT_SECRET}
      ALLOWED_ORIGINS: https://coworkmy.fr,https://www.coworkmy.fr
      FRONTEND_URL: https://coworkmy.fr
    volumes:
      - uploads_data:/app/uploads
    working_dir: /app
    command: >
      sh -c "
        set -e &&
        apk add --no-cache git &&
        echo 'Cleaning /app directory...' &&
        rm -rf /app/* /app/.* 2>/dev/null || true &&
        echo 'Cloning repository for API...' &&
        git clone https://github.com/hlafethi/coworkmy-clean.git /tmp/api-app &&
        cp -r /tmp/api-app/* /app/ &&
        rm -rf /tmp/api-app &&
        echo 'Installing API dependencies...' &&
        npm install --omit=dev &&
        echo 'Starting API server...' &&
        node server.js
      "
    networks:
      - proxy
      - coworkmy-network

volumes:
  uploads_data:

networks:
  proxy:
    external: true
  coworkmy-network:
    driver: bridge
