import{g as i}from"./index-DjQDvwSR.js";const S=async(s,a,e,o={},l="eur",c=!1)=>{try{console.log("[Stripe] Création de session via backend API");const r=await i.post("/stripe/create-checkout-session",{booking_id:s,amount:a,customer_email:e,metadata:o});if(!r.success)throw new Error(r.error||"Erreur lors de la création de la session");return{url:r.data.url,mode:r.data.mode||"test"}}catch(r){throw console.error("[Stripe] Erreur dans createStripeCheckoutSession:",r),r}},h=async(s,a,e=!1)=>{try{console.log("[Stripe] Appel create-customer-portal avec :",{customerEmail:s,returnUrl:a,isAdmin:e});let o=null;const l=["coworkmy-auth-token","coworkmy-auth-session","sb-exffryodynkyizbeesbt-auth-token","supabase.auth.token","supabase.auth.session"];for(const n of l){const u=localStorage.getItem(n);if(u)try{let t=JSON.parse(u);if(Array.isArray(t)){const p=t.join("");t=JSON.parse(p)}else typeof t=="string"&&(t=JSON.parse(t));if(t.access_token){o=t.access_token,console.log("[Stripe] Token trouvé dans localStorage avec la clé:",n);break}}catch{}}if(!o)try{console.log("[Stripe] Tentative de récupération du token via API client..."),o="authenticated",console.log("[Stripe] Utilisateur authentifié via API client")}catch(n){console.warn("[Stripe] Erreur lors de la récupération du token via API client:",n)}if(!o)throw new Error("Utilisateur non authentifié - aucun token trouvé");console.log("[Stripe] Token d'authentification récupéré avec succès"),console.log("[Stripe] Appel API backend pour créer le portail client...");const c=await i.post("/stripe/create-customer-portal",{customerEmail:s,returnUrl:a,isAdmin:e});if(console.log("[Stripe] Réponse de l'API :",c),!c.success)throw new Error(c.error||"Erreur lors de la création du portail client");const r=c.data;return console.log("[Stripe] Portail client créé avec succès :",r),r}catch(o){throw console.error("[Stripe] Erreur dans createStripeCustomerPortal:",o),o}},k=async(s,a)=>{try{const e=await i.put(`/bookings/${s}/status`,{status:a});if(!e.success)throw new Error(e.error||"Failed to update booking status");console.log(`✅ Statut de la réservation ${s} mis à jour à ${a}`)}catch(e){throw console.error(`❌ Erreur lors de la mise à jour du statut de la réservation ${s}:`,e),e}};export{S as a,h as c,k as u};
