version: '3.8'

services:
  backend:
    image: node:20-alpine
    container_name: coworkmy-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      API_PORT: 5000
      DB_HOST: 147.93.58.155
      DB_PORT: 5432
      DB_NAME: coworkmy
      DB_USER: vpshostinger
      DB_PASSWORD: ${DB_PASSWORD}
      DB_SSL: true
      JWT_SECRET: ${JWT_SECRET}
      ALLOWED_ORIGINS: https://coworkmy.fr,https://www.coworkmy.fr
      FRONTEND_URL: https://coworkmy.fr
    volumes:
      - uploads_data:/app/uploads
    working_dir: /app
    command: >
      sh -c "
        apk add --no-cache git &&
        rm -rf /tmp/repo &&
        git clone https://github.com/hlafethi/coworkmy-clean.git /tmp/repo &&
        cp -r /tmp/repo/* /app/ &&
        npm install --omit=dev &&
        echo 'Starting API server...' &&
        node server.js
      "
    networks:
      - proxy
      - coworkmy-network

  frontend:
    image: nginx:alpine
    container_name: coworkmy-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    command: >
      sh -c "
        apk add --no-cache git &&
        echo 'Cloning repository...' &&
        git clone https://github.com/hlafethi/coworkmy-clean.git /tmp/repo &&
        echo 'Copying frontend files...' &&
        mkdir -p /usr/share/nginx/html &&
        if [ -d /tmp/repo/dist ]; then
          cp -r /tmp/repo/dist/* /usr/share/nginx/html/;
        else
          echo 'Dist directory not found, creating minimal index.html';
          echo '<!DOCTYPE html><html><head><title>COWORKMY</title></head><body><h1>Application en cours de d√©ploiement...</h1></body></html>' > /usr/share/nginx/html/index.html;
        fi &&
        cd / &&
        rm -rf /tmp/repo &&
        echo 'Creating nginx config with correct MIME types...' &&
        echo 'server { listen 80; server_name _; root /usr/share/nginx/html; index index.html; location ~* \.js$ { add_header Content-Type application/javascript; } location ~* \.css$ { add_header Content-Type text/css; } location / { try_files $uri $uri/ /index.html; } }' > /etc/nginx/conf.d/default.conf &&
        echo 'Starting nginx...' &&
        nginx -g 'daemon off;'
      "
    networks:
      - proxy
      - coworkmy-network
    depends_on:
      - backend

volumes:
  uploads_data:

networks:
  proxy:
    external: true
  coworkmy-network:
    driver: bridge
